{"version": 2.51, "build_id": 3, "functions": {"map_step:const int,const float*,float*,const float*,const int,const int": ["MOBULA_DLL void map_step_6174d786(const int device_id, const int N, const float* attxi, float* index_x, const float* stepxs, const int att_size, const int out_size) {\n  KERNEL_RUN_BEGIN(device_id);\n  KERNEL_RUN((map_step_kernel<float>))(N, attxi, index_x, stepxs, att_size, out_size);\n  KERNEL_RUN_END();\n}\n\nMOBULA_DLL PackedFunc* map_step_6174d786_register_mx() {\n  return GetMXNetFunc(\n      \"map_step_6174d786\",\n      [](TVMArgs args, TVMRetValue*) {\n        KERNEL_RUN_BEGIN(DEV_ID);\n        KERNEL_RUN_STREAM((map_step_kernel<float>), STRM)(\n          args.values[0].v_int64,\n          static_cast<const float*>(\n            static_cast<DLTensor*>(args.values[1].v_handle)->data),\n          static_cast<float*>(\n            static_cast<DLTensor*>(args.values[2].v_handle)->data),\n          static_cast<const float*>(\n            static_cast<DLTensor*>(args.values[3].v_handle)->data),\n          args.values[4].v_int64,\n          args.values[5].v_int64\n        );\n        KERNEL_RUN_END();\n      },\n      2, std::array<int, 2>({1,3}).data());\n}\n\nMOBULA_DLL void map_step_6174d786_async_mx(\n    PackedFunc* packed_func,\n    const int N, NDArrayHandle attxi, NDArrayHandle index_x, NDArrayHandle stepxs, const int att_size, const int out_size) {\n  (*packed_func)(N, attxi, index_x, stepxs, att_size, out_size);\n}\n\n", null]}}